{"version":3,"sources":["util/route_util.js","actions/modal_actions.js","util/session_api_util.js","actions/session_actions.js","components/session/session_form.js","components/session/session_form_container.js","components/profile/skill.js","components/ranks/ranks.js","components/game/game_stats.js","components/utils/loading_screen.js","components/modal/modal.js","actions/race_actions.js","util/race_api_util.js","components/landing_page/landing_page.js","actions/game_actions.js","components/landing_page/landing_page_container.js","components/profile/profile.js","components/profile/profile_container.js","components/navbar/navbar.js","components/navbar/navbar_container.js","api/socket-context.js","components/utils/phrases.js","components/utils/generateUUID.js","components/rocket/rocket.js","components/game/game.js","components/game/game_container.js","components/race/race.js","components/race/race_container.js","components/waiting_room/waiting_room.js","components/waiting_room/waiting_room_container.js","components/app.js","components/root.js","reducers/session/session_api_reducer.js","reducers/errors/session_errors_reducer.js","reducers/errors/race_errors_reducer.js","reducers/errors/errors_reducer.js","reducers/entities/race_entities_reducer.js","reducers/entities/leaderboard_race_entities_reducer.js","reducers/entities/recent_race_entities_reducer.js","reducers/entities/user_stats_reducer.js","reducers/entities/game_entities_reducer.js","reducers/entities/entities_reducer.js","reducers/ui/ui_reducer.js","reducers/modal/modal_reducer.js","reducers/root_reducer.js","store/store.js","index.js"],"names":["mapStateToProps","state","loggedIn","session","isAuthenticated","ProtectedRoute","withRouter","connect","_ref","Component","component","path","exact","React","createElement","Route","render","props","Redirect","to","_ref2","rest","_objectWithoutProperties","Object","assign","OPEN_MODAL","CLOSE_MODAL","openModal","modal","type","closeModal","setAuthToken","token","axios","defaults","headers","common","receiveSessionErrors","errors","signup","user","dispatch","userData","post","then","login","err","response","data","res","localStorage","setItem","APIUtil","decoded","jwt_decode","currentUser","catch","logout","removeItem","SessionForm","_React$Component","_this","_classCallCheck","this","_possibleConstructorReturn","_getPrototypeOf","call","username","password","formType","handleSignup","bind","_assertThisInitialized","handleLogin","renderErrors","clearedErrors","_inherits","_createClass","key","value","checkFormType","nextProps","setState","prevProps","clearErrors","field","_this2","e","_defineProperty","currentTarget","_this3","preventDefault","history","length","push","_this4","loadingModal","_this5","Fragment","keys","map","error","i","concat","className","onSubmit","onChange","handleUpdate","autoComplete","onClick","openLoginModal","openSignupModal","SkillLevel","apply","arguments","skillLevel","wpm","SkillLevelContainer","ownProps","time","wordsPerMin","accuracy","phraseOrigin","loginBtn","Math","floor","toFixed","LoadingScreen","ui","SessionFormContainer","Ranks","GameStats","stopPropagation","receiveCurrentRace","race","receiveRaceErrors","fetchRaces","get","races","receiveAllRaces","fetchRace","raceId","fetchUserStats","stats","userStats","fetchUserDate","date","fetchLeaderboardRaces","leaderboardRaces","receiveLeaderboardRaces","fetchRecentRaces","recentRaces","receiveRecentRaces","saveRace","LandingPage","document","title","idx","Date","Link","toLocaleDateString","averageSpeed","winner","numRaces","topSpeed","_id","getLeaderboardRaces","getRecentRaces","receiveCurrentGame","game","values","entities","Profile","match","params","avgSpeed","maxSpeed","memberSince","logoutCurrentUser","signupDate","toDateString","location","pathname","url","getRaces","NavBar","_this$props","getLinks","SocketContext","createContext","phrases","randomPhrase","phraseNum","random","generateUUID","s4","toString","substring","progress","leftWidth","rightWidth","style","width","alt","src","Game","phrase","phraseLength","socket","gameId","players","incorrectLetters","correctLetters","timeElapsed","typedEntries","mistakes","countdown","countdownTimer","gameWon","interval","ignoreKeys","incrementTime","detectKeyPresses","sendProgress","addEventListener","countownTimer","on","playerProgress","playerId","checkInput","removeEventListener","clearCurrentGame","nextLetter","newPhrase","newIncorrectLetters","newCorrectLetters","setInterval","includes","pop","unshift","shift","max","id","clearInterval","emit","setTimeout","newTime","rockets","player","Rocket","countdown1","countdownMulti","countdown2","gameRender","join","newPlayers","split","Consumer","Race","forEach","temp","newDate","parseInt","users","getRace","numPlayers","startGame","displayPlayers","WaitingRoom","App","Modal","NavBarContainer","Switch","ProfileContainer","LandingPageContainer","WaitingRoomContainer","GameContainer","RaceContainer","window","hostname","port","openSocket","Root","store","Provider","BrowserRouter","initialState","SessionReducer","undefined","action","_objectSpread","_nullErrors","SessionErrorsReducer","freeze","RaceErrorsReducer","combineReducers","RaceReducer","LeaderboardRaceReducer","merge","RecentRaceReducer","UserStatsReducer","_nullGame","GameReducer","RootReducer","configureStore","preloadedState","middleware","thunk","createStore","rootReducer","applyMiddleware","_toConsumableArray","jwtToken","decodedUser","currentTime","now","exp","root","getElementById","ReactDOM"],"mappings":"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","file":"static/js/main.7c95b6f7.chunk.js","sourcesContent":["import React from 'react';\nimport { connect } from 'react-redux';\nimport { Route, Redirect, withRouter } from 'react-router-dom';\n\n\nconst Auth = ({ component: Component, path, loggedIn, exact }) => (\n    <Route \n        path={path} \n        exact={exact} \n        render={props => (\n            !loggedIn? (\n                <Component {...props} />\n            ) : (\n                <Redirect to=\"/\" />\n                )\n        )} \n    />\n);\n\nconst Protected = ({ component: Component, path, loggedIn, ...rest }) => (\n    <Route \n        {...rest}\n        render={props => (\n            loggedIn? (\n                <Component {...props} />\n            ) : (\n                <Redirect to=\"/\" />\n                )\n        )} \n    />\n);\n\nconst mapStateToProps = state => ({\n    loggedIn: state.session.isAuthenticated\n})\n\nexport const AuthRoute = withRouter(connect(mapStateToProps)(Auth));\nexport const ProtectedRoute = withRouter(connect(mapStateToProps)(Protected));","export const OPEN_MODAL = 'OPEN_MODAL';\nexport const CLOSE_MODAL = 'CLOSE_MODAL';\n\nexport const openModal = modal => {\n  return {\n    type: OPEN_MODAL,\n    modal\n  };\n};\n\nexport const closeModal = () => {\n  return {\n    type: CLOSE_MODAL\n  };\n};","import axios from 'axios';\n\nexport const setAuthToken = token => {\n    if (token) {\n        axios.defaults.headers.common['Authorization'] = token;\n    } else {\n        delete axios.defaults.headers.common['Authorization'];\n    }\n};\n\nexport const signup = (userData) => {\n    return axios.post('/api/users/signup', userData);\n};\n\nexport const login = (userData) => {\n    return axios.post('/api/users/login', userData);\n};","import * as APIUtil from '../util/session_api_util';\nimport jwt_decode from 'jwt-decode';\n\nexport const RECEIVE_USER_LOGOUT = \"RECEIVE_USER_LOGOUT\";\nexport const RECEIVE_CURRENT_USER = \"RECEIVE_CURRENT_USER\";\nexport const RECEIVE_SESSION_ERRORS = \"RECEIVE_SESSION_ERRORS\";\nexport const CLEAR_SESSION_ERRORS = 'CLEAR_SESSION_ERRORS';\n\nexport const receiveCurrentUser = currentUser => ({\n    type: RECEIVE_CURRENT_USER,\n    currentUser\n})\nexport const receiveSessionErrors = errors => ({\n    type: RECEIVE_SESSION_ERRORS,\n    errors\n})\nexport const logoutUser = () => ({\n    type: RECEIVE_USER_LOGOUT\n});\nexport const clearErrors = () => ({\n    type: CLEAR_SESSION_ERRORS\n});\n\nexport const signup = user => dispatch => (\n    APIUtil.signup(user)\n        .then(() => (\n            dispatch(login(user)\n        )\n    ), err => (\n        dispatch(receiveSessionErrors(err.response.data))\n    ))\n);\n\nexport const login = user => dispatch => (\n    APIUtil.login(user)\n        .then( \n            res => {\n                const { token } = res.data;\n                localStorage.setItem('jwtToken', token);\n                APIUtil.setAuthToken(token);\n                const decoded = jwt_decode(token);\n                dispatch(receiveCurrentUser(decoded));\n            })\n        .catch(\n            err => {\n                dispatch(receiveSessionErrors(err.response.data));\n            }\n        )\n);\n\nexport const logout = () => dispatch => {\n    localStorage.removeItem('jwtToken');\n    APIUtil.setAuthToken(false);\n    dispatch(logoutUser());\n};","import React from 'react';\n\nclass SessionForm extends React.Component {\n    constructor(props){\n        super(props);\n        this.state = {\n            username: '',\n            password: '',\n            formType: '',\n            errors: {}\n          };\n        this.handleSignup = this.handleSignup.bind(this);\n        this.handleLogin = this.handleLogin.bind(this);\n        this.renderErrors = this.renderErrors.bind(this);\n        this.clearedErrors = false;\n    }\n\n\n    componentDidMount() {\n        this.checkFormType();\n    }\n\n    componentWillReceiveProps(nextProps) {\n      this.setState({errors: nextProps.errors});\n    }\n\n    checkFormType() {\n        if (this.props.formType === 'login'){\n            this.setState( {formType: \"Login\"});\n        } else if (this.props.formType === 'signup'){\n            this.setState( {formType: \"Signup\"});\n        }\n    }\n\n    componentDidUpdate(prevProps) {\n        if (this.props.formType!== prevProps.formType) {\n            this.checkFormType();\n            this.props.clearErrors();\n        }\n\n    }\n\n    handleUpdate(field) {\n        return e => this.setState({\n          [field]: e.currentTarget.value\n        });\n      }\n\n    handleSignup(e) {\n        e.preventDefault();\n        let user = {\n            username: this.state.username,\n            password: this.state.password,\n        };\n        this.props.signup(user, this.props.history)\n            .then ( () =>  {\n                if (this.props.errors.length === 0 ) {\n                    this.props.closeModal();\n                    this.props.history.push(\"/profile\");\n                }\n        });\n    }\n\n    handleLogin(e) {\n        e.preventDefault();\n        let user = {\n            username: this.state.username,\n            password: this.state.password,\n        };\n\n        this.props.login(user)\n        .then ( () =>  {\n            if (this.props.errors.length === 0 ) {\n                this.props.loadingModal();\n                this.props.history.push(\"/profile\");\n            }\n        });\n    }\n    \n    renderErrors() {\n        return (\n            <> \n                {Object.keys(this.state.errors).map( (error, i) => (\n                    <li key={`error-${i}`}>\n                        {this.state.errors[error]}\n                    </li>\n                ))}\n            </>\n        );\n    }\n    \n\n    render() {\n        return (\n            <div className=\"session-form-container flex-column\">\n                <div className=\"session-form-header flex\">\n                    <h2> {this.state.formType === \"Signup\" ? \"Sign Up\" : \"Login\" }</h2>\n                </div>\n                <form className=\"session-form\" onSubmit={ this.state.formType === \"Signup\" ? this.handleSignup : this.handleLogin }>\n                    <div className=\"session-form-inputs flex-column\">\n                            <div className=\"session-form-input flex\">\n                                <span>Username: </span><input type=\"text\"\n                                value={this.state.username}\n                                onChange={this.handleUpdate('username')}\n                            />\n                            </div>\n                            <div className=\"session-form-input flex\"> \n                                <span>Password:</span><input type=\"password\"\n                                value={this.state.password}\n                                autoComplete=\"current-password\"\n                                onChange={this.handleUpdate('password')}\n                            />\n                            </div>\n                            <input className=\"submit-button button\" type=\"submit\" value=\"Submit\" />\n                    </div>\n                </form>\n            <div className=\"alternate-buttons flex-column\">\n                <div className=\"flex\">\n                { this.props.formType === 'signup' ?\n                    <>\n                        <p>Already a Rocketnaut?</p>\n                        <button className=\"button\" onClick={this.props.openLoginModal}>Login</button>\n                    </>\n                    :\n                    <>\n                        <p>Don't have an account?</p>\n                        <button className=\"button\" onClick={this.props.openSignupModal}>Sign Up</button>\n                    </>\n                }\n                </div>\n                <ul className=\"errors\">{this.renderErrors()}</ul>\n            </div>\n            </div>\n        );\n      }\n\n\n\n\n}\n\nexport default SessionForm;","import { connect } from 'react-redux';\nimport { login, signup, clearErrors } from '../../actions/session_actions';\nimport SessionForm from './session_form';\nimport { openModal, closeModal } from '../../actions/modal_actions';\nimport { withRouter } from 'react-router-dom';\n\nconst mapStateToProps = (state, { formType }) => ({\n    loggedIn: state.session.isAuthenticated,\n    errors: state.errors.session,\n    formType,\n});\n\nconst mapDispatchToProps = dispatch => ({\n    signup: user => dispatch(signup(user)),\n    login: user => dispatch(login(user)),\n    closeModal: () => dispatch(closeModal()),\n    openLoginModal: () => dispatch(openModal({type: 'login'})),\n    openSignupModal: () => dispatch(openModal({type: \"signup\"})),\n    clearErrors: () => dispatch(clearErrors()),\n    loadingModal: () => dispatch(openModal({ type: 'loadingScreen'})),\n});\n\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(SessionForm));","import React from \"react\";\n\n\nclass SkillLevel extends React.Component {\n  render() {\n    let skillLevel;\n    switch (true) {\n      case (this.props.wpm < 30):\n        skillLevel = \"Cadet\"\n        break;\n      case (this.props.wpm > 30 && this.props.wpm < 60):\n        skillLevel = \"Pilot\"\n        break;\n      case (this.props.wpm >= 60 && this.props.wpm < 80):\n        skillLevel = \"Flight Engineer\"\n        break;\n      case (this.props.wpm >= 80 && this.props.wpm < 100):\n        skillLevel = \"Commander\"\n        break;\n      case (this.props.wpm >= 100 && this.props.wpm < 200):\n        skillLevel = \"Cosmonaut\"\n        break;\n      case (this.props.wpm >= 200):\n        skillLevel = \"Cheater\";\n        break;\n      default:\n        skillLevel = \"Calibrating...\";\n    }\n    return (\n      <p className=\"profile-skill-level\">{skillLevel}</p>\n      )\n  }\n}\n\nexport default SkillLevel","import React from 'react';\nimport SkillLevelContainer from \"../profile/skill\";\nimport { closeModal } from '../../actions/modal_actions';\nimport { withRouter } from 'react-router-dom';\nimport { connect } from 'react-redux';\n\nfunction Ranks() {\n\n  return (\n    <div className=\"skills-container flex-column\">\n        <div className=\"skills-container-row skills-header flex\"><div><h1>Ranks</h1></div></div>\n        <div className=\"skills-container-row flex\"><div><p> 0 - 29 wpm </p></div><SkillLevelContainer wpm={0}/></div>\n        <div className=\"skills-container-row flex\"><div><p> 30 - 59 wpm </p></div><SkillLevelContainer wpm={40}/></div>\n        <div className=\"skills-container-row flex\"><div><p> 60 - 79 wpm </p></div><SkillLevelContainer wpm={70}/></div>\n        <div className=\"skills-container-row flex\"><div><p> 80 - 99 wpm </p></div><SkillLevelContainer wpm={90}/></div>\n        <div className=\"skills-container-row skills-bottom flex\"><div><p> 100 - 199 wpm </p></div><SkillLevelContainer wpm={110}/></div>\n    </div>\n  )\n\n}\n\nconst mapStateToProps = (state) => ({\n});\n\nconst mapDispatchToProps = dispatch => ({\n  closeModal: () => dispatch(closeModal()),\n});\n\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(Ranks));","import React from 'react';\nimport { closeModal } from '../../actions/modal_actions';\nimport { withRouter } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { openModal } from '../../actions/modal_actions';\n\nfunction GameStats({ time, wordsPerMin, accuracy, loggedIn, openModal, phraseOrigin }) {\n  let loginBtn;\n  if (!loggedIn) {\n    loginBtn = (\n      <>\n        <span>Sign up or login to start saving your stats!</span>\n        <div className=\"game-stats-login flex\">\n          <button className=\"button\" onClick={() => openModal({ type: 'login'})}>Login</button>\n          <button className=\"button\" onClick={() => openModal({ type: 'signup'})}>Signup</button>\n        </div>\n      </>\n    )\n  }\n  return (\n    <div className=\"skills-container flex-column\">\n        <div className=\"flex\"><div><h1>Mission Accomplished!</h1></div></div>\n        <div className=\"skills-container-row phrase-origin flex\"><p> This quote was from:</p> <p className=\"origin\">{ phraseOrigin }</p> </div>\n        <div className=\"skills-container-row flex\"><p> Words per minute:</p> <p className=\"origin\">{ Math.floor(wordsPerMin) }</p> </div>\n        <div className=\"skills-container-row flex\"><p> Time:</p> <p className=\"origin\">{ time.toFixed(1)} seconds</p> </div>\n        <div className=\"skills-container-row skills-bottom flex\"><p> Accuracy:</p> <p className=\"origin\">{accuracy}% </p></div>\n        {loginBtn}\n    </div>\n  )\n\n}\n\nconst mapStateToProps = (state, ownProps) => ({\n  time: ownProps.time,\n  wordsPerMin: ownProps.wordsPerMin,\n  accuracy: ownProps.accuracy,\n  loggedIn: state.session.isAuthenticated,\n  phraseOrigin: ownProps.phraseOrigin,\n})\n\nconst mapDispatchToProps = dispatch => ({\n  closeModal: () => dispatch(closeModal()),\n  openModal: (modal) => dispatch(openModal(modal))\n});\n\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(GameStats));","\nimport React from 'react';\n\nconst LoadingScreen = () => (\n    <div className=\"loading-modal-background-white\">\n        <div className=\"loading-modal-child flex-column\">\n            <div className=\"loading-spinner\"></div>\n        </div>\n    </div>\n)\n\nexport default LoadingScreen;","import React from 'react';\nimport { closeModal } from '../../actions/modal_actions';\nimport { connect } from 'react-redux';\nimport { withRouter } from 'react-router-dom';\nimport SessionFormContainer from '../session/session_form_container';\nimport Ranks from '../ranks/ranks';\nimport GameStats from '../game/game_stats';\nimport LoadingScreen from '../utils/loading_screen';\n\nfunction Modal({modal, closeModal}) {\n  if (!modal) {\n    return null;\n  }\n  let component;\n  switch (modal.type) {\n    case 'login':\n      component = <SessionFormContainer closeModal={closeModal} formType=\"login\"/> ;\n      break;\n    case 'signup':\n      component = <SessionFormContainer closeModal={closeModal} formType=\"signup\"/> ;\n      break;\n    case 'ranks':\n      component = <Ranks closeModal={closeModal}/> ;\n      break;\n    case 'gameStats':\n      component = <GameStats closeModal={closeModal} wordsPerMin={modal.wordsPerMin} time={modal.time} accuracy={modal.accuracy} phraseOrigin={modal.phraseOrigin} />;\n      break;\n    case 'loadingScreen':\n      component = <LoadingScreen />;\n      break;\n    default:\n      return null;\n  }\n  return (\n    <div className=\"modal-background\" onClick={closeModal}>\n      <div className=\"modal-child flex-column\" onClick={e => e.stopPropagation()}>\n      { component }\n      </div>\n    </div>\n  );\n}\n\nconst mapStateToProps = state => {\n  return {\n    modal: state.ui.modal\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    closeModal: () => dispatch(closeModal())\n  };\n};\n\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(Modal));","import * as APIUtil from '../util/race_api_util';\n\nexport const RECEIVE_ALL_RACES = \"RECEIVE_ALL_RACES\";\nexport const RECEIVE_CURRENT_RACE = \"RECEIVE_CURRENT_RACE\";\nexport const RECEIVE_RACE_ERRORS = \"RECEIVE_RACE_ERRORS\";\nexport const RECEIVE_LEADERBOARD_RACES = \"RECEIVE_LEADERBOARD_RACES\";\nexport const RECEIVE_RECENT_RACES = \"RECEIVE_RECENT_RACES\";\nexport const RECEIVE_USER_STATS = \"RECEIVE_USER_STATS\";\nexport const RECEIVE_USER_DATE = \"RECEIVE_USER_DATE\";\n\nexport const receiveAllRaces = races => ({\n    type: RECEIVE_ALL_RACES,\n    races\n});\n\nexport const receiveLeaderboardRaces = leaderboardRaces => ({\n    type: RECEIVE_LEADERBOARD_RACES,\n    leaderboardRaces\n});\nexport const receiveRecentRaces = recentRaces => ({\n    type: RECEIVE_RECENT_RACES,\n    recentRaces\n});\n\nexport const receiveCurrentRace = race => ({\n    type: RECEIVE_CURRENT_RACE,\n    race\n});\n\nexport const receiveUserStats = userStats => ({\n    type: RECEIVE_USER_STATS,\n    userStats\n});\n\nexport const receiveUserDate = userStats => ({\n    type: RECEIVE_USER_DATE,\n    userStats\n});\n\nexport const receiveRaceErrors = errors => ({\n    type: RECEIVE_RACE_ERRORS,\n    errors\n});\n\nexport const fetchRaces = username => dispatch => (\n    APIUtil.fetchRaces(username)\n        .then(\n            races => dispatch(receiveAllRaces(races)),\n            err => dispatch(receiveRaceErrors(err.response.data))\n        )\n);\n\nexport const fetchRace = raceId => dispatch => (\n    APIUtil.fetchRace(raceId)\n        .then(\n            race => dispatch(receiveCurrentRace(race)),\n            err => dispatch(receiveRaceErrors(err.response.data))\n        )\n);\n\nexport const fetchUserStats = username => dispatch => (\n    APIUtil.fetchUserStats(username)\n        .then(\n            stats => dispatch(receiveUserStats(stats)),\n            err => dispatch(receiveRaceErrors(err.response.data))\n        )\n);\n\nexport const fetchUserDate = username => dispatch => (\n    APIUtil.fetchUserDate(username)\n        .then(\n            date => dispatch(receiveUserDate(date)),\n            err => dispatch(receiveRaceErrors(err.response.data))\n        )\n);\n\nexport const fetchLeaderboardRaces = () => dispatch => (\n    APIUtil.fetchLeaderboardRaces()\n        .then(\n            leaderboardRaces => dispatch(receiveLeaderboardRaces(leaderboardRaces)),\n            err => dispatch(receiveRaceErrors(err.response.data))\n        )\n);\n\nexport const fetchRecentRaces = () => dispatch => (\n    APIUtil.fetchRecentRaces()\n        .then(\n            recentRaces => dispatch(receiveRecentRaces(recentRaces)),\n            err => dispatch(receiveRaceErrors(err.response.data))\n        )\n);\n\nexport const saveRace = race => dispatch => (\n    APIUtil.saveRace(race)\n        .then(\n            race => dispatch(receiveCurrentRace(race)),\n            err => dispatch(receiveRaceErrors(err.response.data))\n        )\n);\n","import axios from 'axios';\n\nexport const setAuthToken = token => {\n    if (token) {\n        axios.defaults.headers.common['Authorization'] = token;\n    } else {\n        delete axios.defaults.headers.common['Authorization'];\n    }\n};\n\nexport const fetchRaces = (username) => {\n    return axios.get(`/api/races/user/${username}`);\n};\nexport const fetchRace = (raceId) => {\n    return axios.get(`/api/races/${raceId}`);\n};\n\nexport const fetchUserStats = (username) => {\n    return axios.get(`/api/races/user/${username}/stats`);\n};\n\nexport const fetchUserDate = (username) => {\n    return axios.get(`/api/users/${username}`);\n};\n\nexport const fetchLeaderboardRaces = () => {\n    return axios.get(`/api/races/top10`);\n};\n\nexport const fetchRecentRaces = () => {\n    return axios.get(`/api/races/recent`);\n};\n\nexport const saveRace = (race) => {\n    return axios.post('/api/races', race);\n};","import React from 'react';\nimport { Link } from 'react-router-dom';\n\nclass LandingPage extends React.Component {\n\n    componentDidMount() {\n        document.title = \"Martian Odyssey | Home\";\n        this.props.fetchLeaderboardRaces();\n        this.props.fetchRecentRaces();\n    }\n\n    getLeaderboardRaces() {\n        let races = (\n            this.props.leaderboardRaces.map((race, idx) => {\n                let date = new Date(race.date);\n                return (\n                    <li key={idx} className=\"flex\">\n                        <div>{idx + 1}</div><div><Link to={`/${race.username}`}>{race.username}</Link></div><div>{`${date.toLocaleDateString()}`}</div><div>{race.averageSpeed} wpm</div>\n                    </li>\n                )\n            })\n        )\n        return (\n            <ul>\n                <li className=\"headers flex\">\n                    <div className=\"leaderboard-index\">Rank</div><div>User</div><div> Date</div><div> Speed </div>\n                </li>\n                {races}\n            </ul>\n        )\n    }\n\n    getRecentRaces() {\n        let races = (\n            this.props.recentRaces.map((race, idx) => {\n                let date = new Date(race.date)\n                return (\n                    <li key={idx} className=\"flex\">\n                        <div>{`${date.toLocaleDateString()}`}</div><div><Link to={`/${race.winner}`}>{race.winner}</Link></div><div>{race.numRaces}</div><div>{race.topSpeed} wpm</div><div><Link to={`/race/${race._id}`}>Details</Link></div>\n                    </li>\n                )\n            })\n        )\n        return (\n            <ul>\n                <li className=\"headers flex\">\n                    <div className=\"leaderboard-index\">Date</div><div>Winner</div><div>Num Players</div><div> Top Speed </div><div> Race </div>\n                </li>\n                {races}\n            </ul>\n        )\n    }\n\n    render() {\n        return (\n            <div className=\"landing-page-container flex-column\">\n                <div className='landing-page-links landing-page-box flex-column'>\n                    <h2>Join a typing race</h2>\n                    <div className=\"flex\">\n                        <Link to={\"/game\"}><button className=\"button\">Practice Race</button></Link>\n                        <Link to={\"/waiting-room\"}><button className=\"button pulse\">Live Race</button></Link>\n                    </div>\n                </div>\n                <div className=\"landing-page-leaderboard-container flex\">\n                    <div className=\"landing-page-leaderboard landing-page-box leaderboard flex-column\">\n                        <h2>Global Leaderboard</h2>\n                        {this.props.leaderboardRaces[0] ? this.getLeaderboardRaces() : <p>No Races Found</p>}\n                    </div>\n                    <div className=\"landing-page-leaderboard landing-page-box leaderboard flex-column\">\n                        <h2>Recent Races</h2>\n                        {this.props.recentRaces[0] ? this.getRecentRaces() : <p>No Races Found</p>}\n                    </div>\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default LandingPage;","export const RECEIVE_CURRENT_GAME = \"RECEIVE_CURRENT_GAME\";\nexport const CLEAR_CURRENT_RACE = \"CLEAR_CURRENT_RACE\";\n\nexport const receiveCurrentGame = game => ({\n    type: RECEIVE_CURRENT_GAME,\n    game\n});\n\nexport const clearCurrentGame = () => ({\n    type: CLEAR_CURRENT_RACE\n});\n","import { connect } from 'react-redux';\nimport { clearErrors } from '../../actions/session_actions';\nimport { fetchLeaderboardRaces, fetchRecentRaces } from '../../actions/race_actions';\nimport LandingPage from './landing_page';\nimport { withRouter } from 'react-router-dom';\nimport { receiveCurrentGame } from '../../actions/game_actions';\n\nconst mapStateToProps = state => ({\n    user: state.session.user,\n    loggedIn: state.session.isAuthenticated,\n    leaderboardRaces: Object.values(state.entities.leaderboardRaces),\n    recentRaces: Object.values(state.entities.recentRaces),\n});\n\nconst mapDispatchToProps = dispatch => ({\n    fetchLeaderboardRaces: () => dispatch(fetchLeaderboardRaces()),\n    fetchRecentRaces: () => dispatch(fetchRecentRaces()),\n    clearErrors: () => dispatch(clearErrors()),\n    receiveCurrentGame: (game) => dispatch(receiveCurrentGame(game)),\n});\n\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(LandingPage));","import React from 'react';\nimport SkillLevelContainer from \"./skill\";\nimport { Link } from 'react-router-dom';\n\n\nclass Profile extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            username: this.props.match.params.username || this.props.user.username,\n            numRaces: \" \",\n            avgSpeed: \" \",\n            maxSpeed: \" \",\n            memberSince: \" \",\n        }\n        this.logoutCurrentUser = this.logoutCurrentUser.bind(this);\n    }\n\n    logoutCurrentUser(e) {\n        e.preventDefault();\n        this.props.logout();\n    }\n\n    componentDidMount() {\n        document.title = `Martian Odyssey | ${this.state.username}`\n        this.props.fetchRaces(this.state.username);\n        this.props.fetchUserStats(this.state.username)\n            .then(res => {\n                if (res.userStats.data[0]) {\n                    let numRaces = Math.floor(res.userStats.data[0].numRaces);\n                    let avgSpeed = Math.floor(res.userStats.data[0].avgSpeed);\n                    let maxSpeed = Math.floor(res.userStats.data[0].maxSpeed);\n                    this.setState({ numRaces: numRaces, avgSpeed: avgSpeed, maxSpeed: maxSpeed });\n                }\n            });\n        this.props.fetchUserDate(this.state.username)\n            .then(res => {\n                if (res.userStats.data.signupDate) {\n                    let date = new Date(res.userStats.data.signupDate);\n                    this.setState({ memberSince: date.toDateString() });\n                }\n            })\n            .then(() => this.props.closeModal());\n    }\n\n    componentDidUpdate(prevProps) {\n        if (this.props.location.pathname !== prevProps.location.pathname) {\n            this.props.fetchRaces(this.state.username);\n        }\n    }\n\n    getRaces() {\n        let races = (\n            this.props.races.map((race, idx) => {\n                let date = new Date(race.date);\n                return (\n                    <li key={idx} className=\"flex\">\n                        <div>{idx + 1}</div><div>{`${date.toLocaleDateString()}`}</div><div>{race.averageSpeed} wpm</div><div>{race.accuracy}%</div><div><Link to={`/race/${race.raceId}`}>Details</Link></div>\n                    </li>\n                )\n            })\n        )\n        return (\n            <ul>\n                <li className=\"headers flex\">\n                    <div className=\"leaderboard-index\">Rank</div><div> Date</div><div> Speed </div><div> Accuracy </div><div> Race </div>\n                </li>\n                {races}\n            </ul>\n        )\n    }\n\n    render() {\n        document.title = `Martian Odyssey  | ${this.state.username}`\n        return (\n            <div className=\"profile-container flex-column\">\n                <div className=\"profile-page flex-column\">\n                    {this.props.match.url === '/profile' ?\n                        (<button className=\"profile-page-logout button\" onClick={this.logoutCurrentUser}>Logout </button>)\n                        :\n                        \"\"\n                    }\n                    <div className=\"profile-page-header\" >\n                        <h2>{`${this.state.username}'s Profile`}</h2>\n                    </div>\n                    <div className=\"profile-info-container flex\">\n                        <div className=\"profile-page-info-item flex-column\" ><h2>Skill level</h2> <button onClick={() => this.props.openModal({ type: 'ranks' })}><SkillLevelContainer wpm={this.state.avgSpeed} /></button></div>\n                        <div className=\"profile-page-info-item flex-column\" ><h2>Member Since</h2> <p>{this.state.memberSince}</p></div>\n                    </div>\n                    <div className=\"profile-page-stats flex\">\n                        <div className=\"profile-page-stats-item flex-column\" ><h3>Total Races</h3><h3>{this.state.numRaces}</h3></div>\n                        <div className=\"profile-page-stats-item flex-column\" ><h3>Average Speed</h3> <h3>{this.state.avgSpeed} wpm</h3></div>\n                        <div className=\"profile-page-stats-item flex-column\" ><h3>Max Speed</h3><h3>{this.state.maxSpeed} wpm</h3></div>\n                    </div>\n                    <div className=\"profile-page-leaderboard leaderboard flex-column\">\n                        <h2>Top 10 races</h2>\n                        {this.props.races[0] ? this.getRaces() : <h3>N/A</h3>}\n                    </div>\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default Profile;","import { connect } from 'react-redux';\nimport { clearErrors, logout } from '../../actions/session_actions';\nimport { fetchRaces, fetchUserStats, fetchUserDate } from '../../actions/race_actions';\nimport Profile from './profile';\nimport { openModal, closeModal } from '../../actions/modal_actions';\nimport { withRouter } from 'react-router-dom';\n\nconst mapStateToProps = state => ({\n    user: state.session.user,\n    loggedIn: state.session.isAuthenticated,\n    races: Object.values(state.entities.races),\n    userStats: Object.values(state.entities.userStats),\n});\n\nconst mapDispatchToProps = dispatch => ({\n    logout: () => dispatch(logout()),\n    fetchRaces: (username) => dispatch(fetchRaces(username)),\n    fetchUserStats: (username) => dispatch(fetchUserStats(username)),\n    fetchUserDate: (username) => dispatch(fetchUserDate(username)),\n    openModal: (modal) => dispatch(openModal(modal)),\n    closeModal: () => dispatch(closeModal()),\n    clearErrors: () => dispatch(clearErrors()),\n});\n\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(Profile));","import React from 'react';\nimport { Link } from 'react-router-dom';\n\n\nclass NavBar extends React.Component {\n    constructor(props) {\n        super(props);\n        let { numRaces, avgSpeed } = this.props;\n        this.state = {\n            numRaces,\n            avgSpeed,\n        };\n        this.logoutCurrentUser = this.logoutCurrentUser.bind(this);\n        this.getLinks = this.getLinks.bind(this);\n    }\n\n    logoutCurrentUser(e) {\n        this.props.logout();\n    }\n    componentDidMount() {\n        if (this.props.loggedIn) {\n            this.props.fetchUserStats(this.props.user.username)\n                .then(res => {\n                    if (res.userStats) {\n                        let numRaces = res.userStats.data[0] ? res.userStats.data[0].numRaces : 0;\n                        let avgSpeed = res.userStats.data[0] ? Math.floor(res.userStats.data[0].avgSpeed) : 0;\n                        this.setState({ numRaces: numRaces, avgSpeed: avgSpeed });\n                    }\n                });\n        }\n    }\n\n    componentDidUpdate(prevProps) {\n        if (this.props.location.pathname !== prevProps.location.pathname) {\n            this.getLinks();\n            if (this.props.loggedIn) {\n                this.props.fetchUserStats(this.props.user.username)\n                    .then(res => {\n                        if (res.userStats) {\n                            let numRaces = res.userStats.data[0] ? res.userStats.data[0].numRaces : 0;\n                            let avgSpeed = res.userStats.data[0] ? Math.floor(res.userStats.data[0].avgSpeed) : 0;\n                            this.setState({ numRaces: numRaces, avgSpeed: avgSpeed });\n                        }\n                    });\n            }\n        }\n    }\n\n    getLinks() {\n        if (this.props.loggedIn) {\n            return (\n                <div className=\"modal-buttons flex\">\n                    <span className=\"nav-bar-stats flex\">\n                        <div className=\"nav-bar-stats-item\" >Welcome <span><Link to={'/profile'}>{this.props.user.username}</Link></span></div>\n                        <div className=\"nav-bar-stats-item\" >Total Races <span>{this.state.numRaces}</span></div>\n                        <div className=\"nav-bar-stats-item\" >Average Speed <span>{this.state.avgSpeed} WPM</span></div>\n                        <div className=\"nav-bar-stats-item\" ><span><Link to={'/profile'}>Your Profile</Link></span></div>\n                        <div className=\"nav-bar-stats-item logout-button\" onClick={() => this.logoutCurrentUser()}>Logout</div>\n                    </span>\n                </div>\n            );\n        } else {\n            return (\n                <div className=\"modal-buttons flex\">\n                    <button className=\"button\" onClick={() => this.props.openModal({ type: 'login' })}>Login</button>\n                    <button className=\"button\" onClick={() => this.props.openModal({ type: 'signup' })}>Signup</button>\n                </div>\n            )\n        }\n    }\n\n    render() {\n        return (\n            <div className=\"navbar-container flex\">\n                <div className=\"navbar-logo\">\n                    <Link to={'/'}>\n                        <i className=\"fas fa-user-astronaut\"></i>\n                        <span className=\"logo\">Martian Odyssey</span>\n                    </Link>\n                </div>\n                {this.getLinks()}\n            </div>\n        )\n    }\n}\n\nexport default NavBar;","import { connect } from 'react-redux';\nimport { withRouter } from 'react-router-dom';\nimport NavBar from './navbar';\nimport { logout } from '../../actions/session_actions';\nimport { openModal } from '../../actions/modal_actions';\nimport { fetchUserStats } from '../../actions/race_actions';\n\nconst mapStateToProps = (state, ownProps) => ({\n    user: state.session.user,\n    loggedIn: state.session.isAuthenticated,\n    numRaces: state.entities.races.numRaces,\n    avgSpeed: state.entities.races.avgSpeed,\n});\n\nconst mapDispatchToProps = dispatch => ({\n    logout: () => dispatch(logout()),\n    openModal: (modal) => dispatch(openModal(modal)),\n    fetchUserStats: (username) => dispatch(fetchUserStats(username)),\n});\n\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(NavBar));","import React from 'react';\nconst SocketContext = React.createContext();\nexport default SocketContext","let phrases = [\n  [\"Every great magic trick consists of three parts or acts. The first part is called The Pledge. The magician shows you something ordinary. Perhaps he asks you to inspect it to see if it is indeed real. But of course... it probably isn't. The second act is called The Turn. Now you're looking for the secret... but you won't find it, because you're not really looking. You don't really want to know. You want to be fooled.\", \"The Prestige\"],\n  ['Words per minute is a measure of typing speed, commonly used in recruitment. For the purposes of WPM measurement, a word is standardized to five characters or keystrokes. Therefore, \"brown\" counts as one word, but \"mozzarella\" counts as two.', \"Wikipedia: Typing\"],\n  [\"They need you right now, but when they don't, they'll cast you out, like a leper! You see, their morals, their code, it's a bad joke. Dropped at the first sign of trouble. They're only as good as the world allows them to be. When the chips are down, these... civilized people, they'll eat each other. See, I'm not a monster. I'm just ahead of the curve.\", \"The Dark Knight\"],\n  [\"It's been more than thirty years since the wolf and the winter cold. And now, as then, it is not fear that grips him, only restlessness. A heightened sense of things. The seaborn breeze, coolly, kissing the sweat at his chest and neck. Gulls cawing, complaining, even as they feast on the thousands of floating dead. The steady breathing of the 300 at his back, ready to die for him without a moment's pause. Everyone of them ready, to die.\", \"300\"],\n  [\"I know what it's like to lose. To feel so desperately that you're right, yet to fail nonetheless. It's frightening, turns the legs to jelly. I ask you to what end? Dread it. Run from it. Destiny arrives all the same. And now it's here.\", \"Avengers: Infinity War\"],\n  [\"If I drive for you, you give me a time and a place. I give you a five-minute window, anything happens in that five minutes and I'm yours no matter what. I don't sit in while you're running it down. I don't carry a gun. I drive.\", \"Driver\"],\n  ['Do you understand that the world does not revolve around you and your \"do whatever it takes, ruin as many people\\'s lives, so long as you can make a name for yourself as an investigatory journalist, no matter how many friends you lose or people you leave dead and bloodied along the way, just so long as you make a name for yourself as an investigatory journalist, no matter how many friends you lose or people you leave dead and bloodied and dying along the way?', \"Zoolander\"],\n  [\"Sometimes I'll start a sentence, and I don't even know where it's going. I just hope I find it along the way. Like an improv conversation. An improversation.\", \"The Office\"],\n  [\"I don't have money. But what I do have are a very particular set of skills; skills I have acquired over a very long career. Skills that make me a nightmare for people like you. If you let my daughter go now, that'll be the end of it. I will not look for you, I will not pursue you. But if you don't, I will look for you, I will find you, and I will kill you.\", \"Taken\"],\n  [\"Wha? Wait, let me explain something to you. I am not Mr. Lebowski. You're Mr. Lebowski. I'm the dude. So that's what you call me. You know. Uh, that or His Dudeness, Duder, or uh El Duderino if you're not into the whole brevity thing.\", \"The Big Lebowski\"],\n  [\"I just want to tell you how I'm feeling. Gotta make you understand. Never gonna give you up, never gonna let you down, never gonna run around and desert you. Never gonna make you cry, never gonna say goodbye, never gonna tell a lie and hurt you.\", \"Never Gonna Give You Up\"],\n  [\"Will you fight? Aye, fight and you may die, run and you'll live, at least a while. And dying in your beds many years from now, would you be willing to trade all of this, from this day to that, for one chance, just one chance, to come back here and tell our enemies that they may take our lives but they'll never take our freedom!\", \"Braveheart\"],\n  [\"The path of the righteous man is beset on all sides by the inequities of the selfish and the tyranny of evil men. Blessed is he who, in the name of charity and good will, shepherds the weak through the valley of darkness. For he is truly his brother's keeper and the finder of lost children. And I will strike down upon thee with great vengeance and furious anger those who attempt to poison and destroy my brothers. And you will know I am the Lord when I lay my vengeance upon thee.\", \"Pulp Fiction\"],\n  [\"Drainage! Drainage, Eli, you boy. Drained dry. I'm so sorry. Here, if you have a milkshake, and I have a milkshake, and I have a straw. There it is, that's a straw, you see? You watching? And my straw reaches across the room, and starts to drink your milkshake... I... drink... your... milkshake! I drink it up!\", \"There Will Be Blood\"],\n  [\"I personally believe that US Americans are unable to do so because, uh, some, uh, people out there in our nation don't have maps and, uh, I believe that our education like such as in South Africa and, uh, the Iraq, everywhere like such as, and, I believe that they should, our education over here in the U.S. should help the U.S., uh, or, uh, should help South Africa and should help the Iraq and the Asian countries, so we will be able to build up our future. For our children.\", \"Miss Teen USA pageant 2007\"],\n  [\"Hey. Hey! Do you know me? I'm the guy that tells you there are guys you can hit and there's guys you can't. Now that's not quite a guy you can't hit, but it's almost a guy you can't hit. So I'm gonna make a ruling on this right now. You don't hit him. Understand?\", \"The Departed\"],\n  [\"Some men are born mediocre, some men achieve mediocrity, and some men have mediocrity thrust upon them. With Major Major it had been all three. Even among men lacking all distinction he inevitably stood out as a man lacking more distinction than all the rest, and people who met him were always impressed by how unimpressive he was.\", \"Catch-22\"],\n  [\"He struggled with himself, too. I saw it -- I heard it. I saw the inconceivable mystery of a soul that knew no restraint, no faith, and no fear, yet struggling blindly with itself.\", \"Heart of Darkness\"],\n  [\"Nobody is gonna hit as hard as life, but it ain't how hard you can hit. It's how hard you can get hit and keep moving forward. It's how much you can take, and keep moving forward. That's how winning is done.\", \"Rocky\"],\n  [\"The Ministry of Truth, which concerned itself with news, entertainment, education, and the fine arts. The Ministry of Peace, which concerned itself with war. The Ministry of Love, which maintained law and order. And the Ministry of Plenty, which was responsible for economic affairs.\", \"Nineteen Eighty-Four\"],\n  [\"It was times like these when I thought my father, who hated guns and had never been to any wars, was the bravest man who ever lived.\", \"To Kill A Mockingbird\"],\n  [\"You have brains in your head. You have feet in your shoes. You can steer yourself any direction you choose. You're on your own. And you know what you know. And YOU are the one who'll decide where to go...\", \"Oh, the Places You'll Go!\"],\n  [\"The rules of the Hunger Games are simple. In punishment for the uprising, each of the twelve districts must provide one girl and one boy, called tributes, to participate. The twenty-four tributes will be imprisoned in a vast outdoor arena that could hold anything from a burning desert to a frozen wasteland. Over a period of several weeks, the competitors must fight to the death. The last tribute standing wins.\", \"The Hunger Games\"],\n  [\"Sometimes, you read a book and it fills you with this weird evangelical zeal, and you become convinced that the shattered world will never be put back together unless and until all living humans read the book.\", \"John Green, The Fault in Our Stars\"],\n  [\"Wherever you fly, you'll be best of the best. Wherever you go, you will top all the rest. Except when you don't. Because, sometimes, you won't. I'm sorry to say so but, sadly, it's true that Bang-ups and Hang-ups can happen to you.\", \"Oh! The Places You'll Go\"],\n  [\"The experience was powerful and fundamental. It seemed to me that it had always felt like this to be a human in the wild, and as long as the wild existed it would always feel this way.\", \"Wild\"],\n  [\"I was told love should be unconditional. That’s the rule, everyone says so. But if love has no boundaries, no limits, no conditions, why should anyone try to do the right thing ever?\", \"Gone Girl\"],\n  [\"Autonomy, complexity, and a connection between effort and reward are, most people will agree, the three qualities that work has to have if it is to be satisfying.\", \"Outliers\"],\n  // [\"Test2\", \"Test2\"],\n]\n\n\nexport const randomPhrase = () => {\n  let phraseNum = Math.floor(Math.random() * phrases.length);\n  return phrases[phraseNum];\n}","export const generateUUID = () => {\n    function s4() {\n      return Math.floor((1 + Math.random()) * 0x10000)\n        .toString(16)\n        .substring(1);\n    }\n    return s4() + s4() + '-' + s4() + '-' + s4() + '-' +\n      s4() + '-' + s4() + s4() + s4();\n}","import React from 'react';\nimport { connect } from 'react-redux';\n\nfunction Rocket( {progress, username}) {\n\n  // To build dynamic rocket icons\n  // https://icons8.com/icons/set/rocket\n\n  let leftWidth = (progress);\n  let rightWidth = (100-progress);\n\n  return (\n      <div className=\"rocket-container flex\">\n        <div className=\"rocket-left\" style={{width: `${leftWidth}%`} }><p>{ username }</p></div>\n        <img className=\"rocket-img\" alt=\"rocket-ship\" src=\"https://img.icons8.com/color/96/ffffff/launched-rocket.png\" />\n        <div className=\"rocket-right\" style={{width: `${rightWidth}%`}}><pre> </pre></div>\n      </div>\n  )\n}\n\nconst mapStateToProps = (state, ownProps) => ({\n  progress: ownProps.progress,\n  username: ownProps.username,\n});\n\nconst mapDispatchToProps = dispatch => ({\n})\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Rocket);\n","import React from 'react';\nimport Rocket from '../rocket/rocket';\n\nclass Game extends React.Component {\n  constructor(props) {\n    super(props);\n    let { phrase, phraseLength, socket, gameId, players } = this.props;\n    this.state = {\n      socket,\n      phrase,\n      phraseLength,\n      incorrectLetters: [],\n      correctLetters: [],\n      timeElapsed: 0.001,\n      typedEntries: 0,\n      players,\n      wordsPerMin: 0,\n      mistakes: 0,\n      countdown: 0,\n      countdownTimer: \"5...\",\n      gameId,\n      gameWon: false,\n      interval: \"\",\n      ignoreKeys: ['Alt', 'Meta', 'Tab', 'Control', 'Shift', 'CapsLock', 'Enter', 'ArrowLeft', 'ArrowRight', 'ArrowUp', 'ArrowDown', 'Home', 'End', 'PageUp', 'PageDown'],\n    };\n    this.incrementTime = this.incrementTime.bind(this);\n    this.detectKeyPresses = this.detectKeyPresses.bind(this);\n    this.sendProgress = this.sendProgress.bind(this);\n  }\n\n  componentDidMount() {\n    document.title = \"Martian Odyssey | Game\";\n    document.addEventListener(\"keydown\", this.detectKeyPresses);\n    if (this.props.type === \"multiplayer\") {\n      this.countownTimer();\n    }\n    this.state.socket.on('receive_progress', (data) => {\n      if (this.props.type === 'practice') {\n        this.setState({ players: {} });\n      }\n      if (data.gameId === this.state.gameId) {\n        let playerProgress = this.state.players;\n        playerProgress[data.playerId] = data;\n        this.setState({ players: playerProgress });\n      }\n    });\n  }\n\n  componentDidUpdate() {\n    this.checkInput();\n  }\n\n\n  componentWillUnmount() {\n    document.removeEventListener(\"keydown\", this.detectKeyPresses);\n    this.props.clearCurrentGame();\n  }\n\n  detectKeyPresses(e) {\n    let newPhrase = this.state.phrase;\n    let newIncorrectLetters = this.state.incorrectLetters;\n    let newCorrectLetters = this.state.correctLetters;\n    let nextLetter;\n    if (this.state.countdown === 0) {\n      if (e.key === 'Enter') {\n        this.countownTimer();\n      }\n    } else if (this.state.countdown === 2) {\n      if (this.state.typedEntries === 0) {\n        this.setState({ interval: setInterval(this.incrementTime, 10), timeElapsed: 0.01, });\n      }\n      if (this.state.ignoreKeys.includes(e.key)) {\n      } else if (e.key === 'Backspace' || e.key === 'Delete') {\n        if (newIncorrectLetters.length) {\n          nextLetter = newIncorrectLetters.pop();\n          newPhrase.unshift(nextLetter);\n        } else if (newCorrectLetters.length) {\n          nextLetter = newCorrectLetters.pop();\n          newPhrase.unshift(nextLetter);\n        }\n      } else if (e.key === newPhrase[0] && newIncorrectLetters.length === 0) {\n        nextLetter = newPhrase.shift();\n        newCorrectLetters.push(nextLetter);\n      } else if ((e.key !== newPhrase[0] || newIncorrectLetters.length) && newPhrase.length) {\n        nextLetter = newPhrase.shift();\n        newIncorrectLetters.push(nextLetter);\n        this.setState({ mistakes: this.state.mistakes + 1 });\n      }\n      this.setState({\n        incorrectLetters: newIncorrectLetters,\n        correctLetters: newCorrectLetters,\n        phrase: newPhrase,\n        typedEntries: this.state.typedEntries + 1,\n      });\n      this.sendProgress();\n    }\n  }\n\n  checkInput() {\n    if (!this.state.phrase.length && !this.state.incorrectLetters.length && !this.state.gameWon) {\n      let time = this.state.timeElapsed;\n      let accuracy = Math.max(Math.floor((this.state.correctLetters.length - this.state.mistakes) / (this.state.correctLetters.length || 0.0001) * 100), 0).toString()\n      this.setState({\n        gameWon: true,\n        wordsPerMin: Math.floor((this.state.phraseLength / 5) / (time / 60))\n      });\n      if (this.props.loggedIn && this.props.type !== 'practice') {\n        this.props.saveRace({\n          user: this.props.user.id,\n          username: this.props.user.username,\n          averageSpeed: Math.floor((this.state.phraseLength / 5) / (time / 60)).toString(),\n          accuracy: accuracy,\n          gameId: this.state.gameId,\n        });\n      }\n      clearInterval(this.state.interval);\n      document.removeEventListener(\"keydown\", this.detectKeyPresses);\n      this.props.openModal({ type: 'gameStats', wordsPerMin: this.state.wordsPerMin, time: this.state.timeElapsed, accuracy: accuracy, phraseOrigin: this.props.phraseOrigin });\n    }\n  }\n\n  sendProgress() {\n    let username = this.props.user.username ? this.props.user.username : \"Guest\";\n    let progress = (this.state.correctLetters.length / this.state.phraseLength * 100).toFixed(2);\n    let gameId = this.state.gameId;\n    this.state.socket.emit('send_progress', {\n      gameId,\n      username,\n      progress\n    });\n  }\n\n  countownTimer() {\n    this.setState({ countdown: 1 });\n    setTimeout(() => this.setState({ countdownTimer: \"4...\" }), 1000);\n    setTimeout(() => this.setState({ countdownTimer: \"3...\" }), 2000);\n    setTimeout(() => this.setState({ countdownTimer: \"2...\" }), 3000);\n    setTimeout(() => this.setState({ countdownTimer: \"1...\" }), 4000);\n    setTimeout(() => this.setState({ countdown: 2 }), 5000);\n  }\n\n  incrementTime() {\n    let newTime = this.state.timeElapsed + 0.01;\n    this.setState({\n      timeElapsed: newTime,\n      wordsPerMin: Math.floor(((this.state.correctLetters.length || 0) / 5) / (newTime / 60)),\n    });\n  }\n\n  render() {\n\n    let rockets = (\n      <div>\n        {\n          Object.values(this.state.players).map(player => (\n            <Rocket key={player.playerId} playerId={player.playerId} username={player.username} progress={player.progress} />\n          ))\n        }\n      </div>\n    )\n\n    let countdown1 = (\n      <>\n        <div className=\"countdown flex\">\n          <h1>Press <span>Enter</span> to get started</h1>\n        </div>\n      </>\n    )\n\n    let countdownMulti = (\n      <>\n        <div className=\"countdown flex\">\n          <h1>Get Ready</h1>\n        </div>\n      </>\n    )\n\n    let countdown2 = (\n      <>\n        <div className=\"countdown flex-column\">\n          <h1> Start typing in:</h1>\n          <h1>{this.state.countdownTimer}</h1>\n          <h3>Tip: If you make a mistake, press <span>Backspace</span> to correct it</h3>\n        </div>\n      </>\n    )\n\n    let gameRender = (\n      <>\n        <div className=\"answer-phrase flex\">\n          <pre>\n            {this.state.correctLetters.length ? (<span className=\"green\">{this.state.correctLetters.join(\"\")}</span>) : \"\"}\n            {this.state.incorrectLetters.length ? (<span className=\"red\">{this.state.incorrectLetters.join(\"\")}</span>) : \"\"}\n            <span className=\"regular\" >{this.state.phrase.join(\"\") || \"\"} </span>\n          </pre>\n        </div>\n        <div className={`game-stats flex ${this.state.gameWon ? \"finished\" : \"\"}`}>\n          <p className={`wpm flex`}>Words per minute: {this.state.wordsPerMin}</p>\n          <p className={`wpm flex`}>Time: <div>{this.state.timeElapsed.toFixed(1)}</div> seconds</p>\n          <p className={`wpm flex`}>Accuracy: {`${Math.max(Math.floor((this.state.correctLetters.length - this.state.mistakes) / (this.state.correctLetters.length || 0.0001) * 100), 0)}%`}</p>\n        </div>\n      </>\n    )\n\n    return (\n      <>\n        <div className=\"game-area-parent flex-column\">\n          <div className=\"progress-meter flex\">\n\n            <img className=\"earth\" alt='earth' src=\"./assets/earth.png\" />\n            {rockets}\n            <img className=\"mars\" alt='mars' src=\"./assets/mars.png\" />\n          </div>\n          <div className=\"game-area\">\n            {(this.props.type === \"multiplayer\" && this.state.countdown === 0) ? countdownMulti : this.state.countdown === 0 ? countdown1 : this.state.countdown === 1 ? countdown2 : gameRender}\n          </div>\n        </div>\n      </>\n    )\n  }\n}\n\nexport default Game;","import React from 'react';\nimport { connect } from 'react-redux';\nimport { withRouter } from 'react-router-dom';\nimport { saveRace } from '../../actions/race_actions';\nimport { openModal } from '../../actions/modal_actions';\nimport SocketContext from '../../api/socket-context';\nimport { randomPhrase } from '../utils/phrases';\nimport { clearCurrentGame } from '../../actions/game_actions';\nimport { generateUUID } from '../utils/generateUUID';\nimport Game from './game';\n\nconst GameWithSocket = props => (\n\t<SocketContext.Consumer>\n\t\t{socket => <Game {...props} socket={socket} />}\n\t</SocketContext.Consumer>\n)\n\nconst mapStateToProps = function(state) {\n\t\tlet currentUser = state.session.user ? state.session.user.username : \"Guest\";\n\t\tlet phrase;\n\t\tlet gameId;\n\t\tlet type;\n\t\tlet players;\n\t\tlet newPlayers = {};\n\t\tnewPlayers[currentUser] = {username: currentUser, progress: 0, playerId: \"practicePlayer\"};\n\t\tstate.entities.game.players ? players = state.entities.game.players : players = newPlayers;\n\t\tstate.entities.game.phrase ? phrase = state.entities.game.phrase : phrase = randomPhrase();\n\t\tstate.entities.game.gameId ? gameId = state.entities.game.gameId : gameId = generateUUID();\n\t\tstate.entities.game.type ? type = state.entities.game.type : type = \"practice\";\n\n\t\treturn ({\n\t\t\tuser: state.session.user,\n\t\t\tloggedIn: state.session.isAuthenticated,\n\t\t\tphrase: phrase[0].split(\"\"),\n\t\t\tphraseOrigin: phrase[1],\n\t\t\tphraseLength: phrase[0].length,\n\t\t\tgameId,\n\t\t\ttype,\n\t\t\tplayers,\n\t\t});\n};\n\nconst mapDispatchToProps = dispatch => ({\n\tsaveRace: (race) => dispatch(saveRace(race)),\n\topenModal: (modal) => dispatch(openModal(modal)),\n\tclearCurrentGame: () => dispatch(clearCurrentGame()),\n});\n\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(GameWithSocket));","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport SkillLevelContainer from \"../profile/skill\";\n\nclass Race extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            date: \"Loading\",\n            topSpeed: 0,\n\n        }\n    }\n\n\n    componentDidMount() {\n        document.title = \"Martian Odyssey | Race\";\n\n        this.props.fetchRace(this.props.raceId)\n            .then(res => {\n                res.race.data.forEach(user => {\n                    let temp;\n                    let newDate = new Date(user.date);\n                    parseInt(user.averageSpeed) > this.state.topSpeed ? this.setState({ topSpeed: user.averageSpeed }) : temp = 0;\n                    this.setState({ date: newDate.toLocaleDateString(), temp });\n                });\n            });\n    }\n\n\n    getRace() {\n        let users = (\n            this.props.users.map((user, idx) => {\n                return (\n                    <li key={idx} className=\"flex\">\n                        <div>{idx + 1}</div><div><Link to={`/${user.username}`}>{user.username}</Link></div><div>{user.averageSpeed} wpm</div><div>{user.accuracy}%</div><div><button onClick={() => this.props.openModal({ type: 'ranks' })}><SkillLevelContainer wpm={user.averageSpeed} /></button></div>\n                    </li>\n                )\n            })\n        )\n        return (\n            <ul>\n                <li className=\"headers flex\">\n                    <div className=\"leaderboard-index\">Place</div><div>User</div><div> Speed</div><div> Accuracy </div><div> Skill Level</div>\n                </li>\n                {users}\n            </ul>\n        )\n    }\n\n    render() {\n        return (\n            <div className=\"race-page-container flex-column\">\n                <div className=\"profile-page-header\" >\n                    <h2>Race</h2>\n                </div>\n                <div className=\"race-page-info-container flex\">\n                    <div className=\"race-page-info-item flex-column\" ><h2>Total Players</h2><p>{this.props.users.length}</p></div>\n                    <div className=\"race-page-info-item flex-column\" ><h2>Winner</h2><p>{this.props.winner}</p></div>\n                    <div className=\"race-page-info-item flex-column\" ><h2>Top Speed</h2><p>{this.state.topSpeed}wpm</p></div>\n                    <div className=\"race-page-info-item flex-column\" ><h2>Date</h2><p>{this.state.date}</p></div>\n                </div>\n                <div className=\"race-page-leaderboard leaderboard flex-column\">\n                    <h2>Players</h2>\n                    {this.props.users[0] ? this.getRace() : <p>No Users Found</p>}\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default Race;","import { connect } from 'react-redux';\nimport { withRouter } from 'react-router-dom';\nimport { fetchRace } from '../../actions/race_actions';\nimport { openModal } from '../../actions/modal_actions';\n\nimport Race from './race';\n\nconst mapStateToProps = function(state, ownProps){\n\tlet users = Object.values(state.entities.races);\n\treturn ({\n\t\traceId: ownProps.match.params.raceId,\n\t\tusers,\n\t\twinner: ( users[0] ? users[0].username : \"Loading\"),\n\t});\n};\n\nconst mapDispatchToProps = dispatch => ({\n\tfetchRace: (raceId) => dispatch(fetchRace(raceId)),\n\topenModal: (modal) => dispatch(openModal(modal)),\n});\n\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(Race));","import React from 'react';\nimport { randomPhrase } from '../utils/phrases';\nimport { generateUUID } from '../utils/generateUUID';\n\nclass Race extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            socket: this.props.socket,\n            players: {},\n            numPlayers: 0,\n            username: this.props.user.username ? this.props.user.username : \"Guest\",\n            interval: \"\",\n            timeElapsed: 0,\n        };\n        this.startGame = this.startGame.bind(this);\n        this.incrementTime = this.incrementTime.bind(this);\n    }\n\n    componentDidMount() {\n        let username = this.state.username;\n        let user = this.props.user;\n        document.title = \"Martian Odyssey | Waiting Room\";\n        this.setState({ interval: setInterval(this.incrementTime, 1000) });\n        this.state.socket.emit('joined', {\n            user,\n            username,\n            progress: 0,\n        });\n\n        this.state.socket.on('newPlayer', (data) => {\n            let players = this.state.players;\n            if (!players[data.playerId]) {\n                this.state.socket.emit('joined', { user, username, });\n            };\n            players[data.playerId] = data;\n            let numPlayers = Object.values(players).length;\n            this.setState({ players: players, numPlayers: numPlayers });\n        });\n\n        this.state.socket.on('playerLeft', (data) => {\n            let players = this.state.players;\n            delete players[data.playerId];\n            this.setState({ players: players });\n            let numPlayers = Object.values(this.state.players).length;\n            this.setState({ numPlayers: numPlayers });\n        });\n\n        this.state.socket.on('playGame', (data) => {\n            this.props.receiveCurrentGame(data);\n            this.props.history.push(\"/game\");\n            clearInterval(this.state.interval);\n        });\n    }\n\n    componentWillUnmount() {\n        let username = this.state.username;\n        let user = this.props.user;\n        this.state.socket.emit('playerDisconnect', {\n            username,\n            user,\n        });\n    }\n\n    incrementTime() {\n        let newTime = this.state.timeElapsed + 1;\n        this.setState({\n            timeElapsed: newTime,\n        });\n    }\n\n    startGame() {\n        let gameId = generateUUID();\n        let phrase = randomPhrase();\n        this.state.socket.emit('startGame', {\n            gameId,\n            phrase,\n            type: \"multiplayer\",\n            players: this.state.players,\n        });\n    }\n\n    displayPlayers() {\n        let players = (\n            Object.values(this.state.players).map((player, idx) => {\n                return (\n                    <li key={idx} className=\"flex\">\n                        <div>{idx + 1}</div><div>{player.username}</div>\n                    </li>\n                )\n            })\n        )\n        return (\n            <ul>\n                <li className=\"headers flex\">\n                    <div className=\"leaderboard-index\">Number</div><div className=\"leaderboard-index\">Player</div>\n                </li>\n                {players}\n            </ul>\n        )\n    }\n\n    render() {\n        return (\n            <div className=\"waiting-room-container flex-column\">\n                <div className=\"waiting-room-header\" >\n                    <h2>Waiting Room</h2>\n                </div>\n                <div className=\"waiting-room-info-container flex\">\n                    <div className=\"waiting-room-info-item flex-column\" ><h2>Total Players</h2><p>{this.state.numPlayers}</p></div>\n                    <div className=\"waiting-room-info-item flex-column\" >\n                        {(this.state.numPlayers >= 3 || this.state.timeElapsed > 4) ?\n                            (<button className=\"waiting-room-play-game button\" onClick={this.startGame}>Play Game </button>)\n                            :\n                            <button className=\"waiting-room-play-game-grey button\">{`Waiting for more players ( ${Math.max((5 - this.state.timeElapsed), 0)} )`}</button>\n                        }\n                    </div>\n                </div>\n                <div className=\"waiting-room-player-list leaderboard flex-column\">\n                    <h2>Players</h2>\n                    {this.state.players ? this.displayPlayers() : <p>No Users Found</p>}\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default Race;","import React from 'react';\nimport { connect } from 'react-redux';\nimport { withRouter } from 'react-router-dom';\nimport { openModal } from '../../actions/modal_actions';\nimport { receiveCurrentGame } from '../../actions/game_actions';\nimport { randomPhrase } from '../utils/phrases';\nimport SocketContext from '../../api/socket-context';\nimport WaitingRoom from './waiting_room';\n\nconst WaitingRoomWithSocket = props => (\n\t<SocketContext.Consumer>\n\t\t{socket => <WaitingRoom {...props} socket={socket} />}\n\t</SocketContext.Consumer>\n)\n\nconst mapStateToProps = (state) => ({\n    user: state.session.user,\n    loggedIn: state.session.isAuthenticated,\n});\n\nconst mapDispatchToProps = dispatch => ({\n\topenModal: (modal) => dispatch(openModal(modal)),\n\treceiveCurrentGame: (game) => dispatch(receiveCurrentGame(game)),\n\trandomPhrase: () => dispatch(randomPhrase()),\n});\n\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(WaitingRoomWithSocket));","import React from 'react';\nimport { ProtectedRoute } from '../util/route_util';\nimport { Switch, Route } from 'react-router-dom';\n\nimport Modal from './modal/modal';\nimport LandingPageContainer from './landing_page/landing_page_container';\nimport ProfileContainer from './profile/profile_container';\nimport NavBarContainer from './navbar/navbar_container';\nimport GameContainer from './game/game_container';\nimport RaceContainer from './race/race_container';\nimport WaitingRoomContainer from './waiting_room/waiting_room_container';\n\nconst App = () => (\n    <div className=\"app\">\n        <Modal />\n        <header>\n        </header>\n        <main>\n            <NavBarContainer />\n            <Switch>\n                <ProtectedRoute exact path='/profile' component={ProfileContainer} />\n                <Route exact path='/' component={LandingPageContainer} />\n                <Route exact path='/waiting-room' component={WaitingRoomContainer} />\n                <Route exact path='/game' component={GameContainer} />\n                <Route exact path='/race/:raceId' component={RaceContainer} />\n                <Route exact path='/:username' component={ProfileContainer} />\n            </Switch>\n        </main>\n        <footer>\n            <div id='stars'></div>\n            <div id='stars2'></div>\n            <div id='stars3'></div>\n            <div id='warpStars'></div>\n            <div id='warpStars2'></div>\n        </footer>\n    </div>\n);\n\nexport default App;","import React from 'react';\nimport { Provider } from 'react-redux';\nimport { BrowserRouter } from 'react-router-dom';\nimport App from './app';\nimport SocketContext from '../api/socket-context';\nimport openSocket from 'socket.io-client';\n\nconst url = `${window.location.hostname}:${window.location.port}`;\nconst socket = openSocket(url);\n\nconst Root = ( { store } ) => (\n    <SocketContext.Provider value={socket}>\n        <Provider store={store}>\n            <BrowserRouter>\n                <App />\n            </BrowserRouter>\n        </Provider>\n    </SocketContext.Provider>\n);\n\nexport default Root;","\nimport { RECEIVE_USER_LOGOUT, RECEIVE_CURRENT_USER } from '../../actions/session_actions';\n\nconst initialState = {\n    isAuthenticated: false,\n    user: {},\n};\n\nconst SessionReducer = (state = initialState, action) => {\n    switch(action.type) {\n        case RECEIVE_CURRENT_USER:\n            return {\n                ...state,\n                user: action.currentUser,\n                isAuthenticated: true,\n            }\n        case RECEIVE_USER_LOGOUT:\n            return initialState;\n        default:\n            return state;\n    }\n}\n\nexport default SessionReducer;","import { RECEIVE_SESSION_ERRORS, \n         RECEIVE_CURRENT_USER,\n         CLEAR_SESSION_ERRORS } from '../../actions/session_actions';\n\nconst _nullErrors = [];\n\nconst SessionErrorsReducer = (state = _nullErrors, action) => {\n    Object.freeze(state);\n    switch(action.type) {\n        case RECEIVE_SESSION_ERRORS:\n            return action.errors;\n        case RECEIVE_CURRENT_USER:\n            return _nullErrors;\n        case CLEAR_SESSION_ERRORS:\n            return [];\n        default:\n            return state;\n    }\n};\n\nexport default SessionErrorsReducer;","import { RECEIVE_CURRENT_RACE, RECEIVE_ALL_RACES, RECEIVE_RACE_ERRORS } from '../../actions/race_actions';\n\nconst _nullErrors = [];\n\nconst RaceErrorsReducer = (state = _nullErrors, action) => {\n    Object.freeze(state);\n    switch(action.type) {\n        case RECEIVE_RACE_ERRORS:\n            return action.errors;\n        case RECEIVE_ALL_RACES:\n        case RECEIVE_CURRENT_RACE:\n            return _nullErrors;\n        default:\n            return state;\n    }\n};\n\nexport default RaceErrorsReducer;","import { combineReducers } from 'redux';\nimport SessionErrorsReducer from './session_errors_reducer';\nimport RaceErrorsReducer from './race_errors_reducer';\n\nexport default combineReducers({\n    session: SessionErrorsReducer,\n    races: RaceErrorsReducer,\n});","import { RECEIVE_CURRENT_RACE, RECEIVE_ALL_RACES } from '../../actions/race_actions';\n\nconst RaceReducer = (state = {}, action) => {\n    Object.freeze(state);\n    switch(action.type) {\n        case RECEIVE_CURRENT_RACE:\n            return action.race.data;\n        case RECEIVE_ALL_RACES:\n            return action.races.data;\n        default:\n            return state;\n    }\n};\n\nexport default RaceReducer;","import { RECEIVE_LEADERBOARD_RACES } from '../../actions/race_actions';\nimport merge from 'lodash/merge';\n\nconst LeaderboardRaceReducer = (state = {}, action) => {\n    Object.freeze(state);\n    let newState;\n    switch(action.type) {\n        case RECEIVE_LEADERBOARD_RACES:\n            newState = merge({}, state, action.leaderboardRaces.data);\n            return newState;\n        default:\n            return state;\n    }\n};\n\nexport default LeaderboardRaceReducer;","import { RECEIVE_RECENT_RACES } from '../../actions/race_actions';\n\nconst RecentRaceReducer = (state = {}, action) => {\n    Object.freeze(state);\n    switch(action.type) {\n        case RECEIVE_RECENT_RACES:\n            return action.recentRaces.data;\n        default:\n            return state;\n    }\n};\n\nexport default RecentRaceReducer;","import { RECEIVE_USER_STATS, RECEIVE_USER_DATE } from '../../actions/race_actions';\nimport merge from 'lodash/merge';\n\nconst UserStatsReducer = (state = {}, action) => {\n    Object.freeze(state);\n    let newState;\n    switch(action.type) {\n        case RECEIVE_USER_STATS:\n        case RECEIVE_USER_DATE:\n            newState = merge({}, state, action.userStats.data);\n            return newState;\n        default:\n            return state;\n    }\n};\n\nexport default UserStatsReducer;","import { RECEIVE_CURRENT_GAME, CLEAR_CURRENT_RACE } from '../../actions/game_actions';\n\nconst _nullGame = {};\n\nconst GameReducer = (state = {}, action) => {\n    Object.freeze(state);\n    switch(action.type) {\n        case RECEIVE_CURRENT_GAME:\n            return action.game;\n        case CLEAR_CURRENT_RACE:\n            return _nullGame;\n        default:\n            return state;\n    }\n};\n\nexport default GameReducer;","import { combineReducers } from 'redux';\nimport RaceReducer from './race_entities_reducer';\nimport LeaderboardRaceReducer from './leaderboard_race_entities_reducer';\nimport RecentRaceReducer from './recent_race_entities_reducer';\nimport UserStatsReducer from './user_stats_reducer';\nimport GameReducer from './game_entities_reducer';\n\nexport default combineReducers({\n    races: RaceReducer,\n    leaderboardRaces: LeaderboardRaceReducer,\n    recentRaces: RecentRaceReducer,\n    userStats: UserStatsReducer,\n    game: GameReducer,\n});","import { combineReducers } from 'redux';\nimport modal from '../modal/modal_reducer';\n\nexport default combineReducers({\n  modal\n});","import {\n  OPEN_MODAL,\n  CLOSE_MODAL\n} from '../../actions/modal_actions';\n\nexport default function modalReducer(state = null, action) {\n  switch (action.type) {\n    case OPEN_MODAL:\n      return action.modal;\n    case CLOSE_MODAL:\n      return null;\n    default:\n      return state;\n  }\n}","import { combineReducers } from 'redux';\nimport session from './session/session_api_reducer';\nimport errors from './errors/errors_reducer';\nimport entities from './entities/entities_reducer';\nimport ui from './ui/ui_reducer';\n\nconst RootReducer = combineReducers( {\n    session,\n    errors,\n    entities,\n    ui,\n});\n\nexport default RootReducer;","import {createStore, applyMiddleware } from 'redux';\nimport thunk from 'redux-thunk';\nimport { logger } from 'redux-logger';\nimport rootReducer from '../reducers/root_reducer';\n\n\nconst configureStore = (preloadedState = {}) => {\n    let middleware = [thunk];\n    if (process.env.NODE_ENV !== 'production') {\n        middleware = [...middleware, logger];\n    }\n    return createStore(\n        rootReducer,\n        preloadedState,\n        applyMiddleware(...middleware)\n    );\n};\n\nexport default configureStore;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport Root from './components/root';\nimport './stylesheets/application.scss';\nimport configureStore from './store/store';\nimport jwt_decode from 'jwt-decode';\nimport { setAuthToken } from './util/session_api_util';\nimport { logout } from './actions/session_actions';\n\ndocument.addEventListener('DOMContentLoaded', () => {\n    let store;\n\n    if (localStorage.jwtToken) {\n        setAuthToken(localStorage.jwtToken);\n        const decodedUser = jwt_decode(localStorage.jwtToken);\n        const preloadedState = { session: {isAuthenticated: true, user: decodedUser } };\n        const currentTime = Date.now() / 1000;\n\n        store = configureStore(preloadedState);\n        if (decodedUser.exp < currentTime) {\n            store.dispatch(logout());\n        }\n    } else {\n        store = configureStore( {} );\n    }\n\n    const root = document.getElementById('root');\n    ReactDOM.render( <Root store={store} />, root);\n})"],"sourceRoot":""}